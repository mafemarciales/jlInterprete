
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '68B11EDB13E6EA29209021DCFE362329'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([0,1,3,4,20,],[-33,0,-2,-1,-3,]),'DELIMITADOR':([2,5,6,7,8,9,10,12,13,16,20,21,22,23,24,25,26,33,36,37,38,45,46,49,50,55,56,59,],[5,-33,20,-6,-5,-7,-8,-33,-33,-19,-3,-4,-9,-10,-16,-18,-17,-32,-11,-12,5,5,-22,-21,5,5,-23,-20,]),'ENTERO':([5,6,7,8,9,10,12,13,16,20,21,22,23,24,25,26,33,36,37,46,49,56,59,],[14,14,-6,-5,-7,-8,-33,-33,-19,-3,-4,-9,-10,-16,-18,-17,-32,-11,-12,-22,-21,-23,-20,]),'STRING':([5,6,7,8,9,10,12,13,16,20,21,22,23,24,25,26,33,36,37,46,49,56,59,],[15,15,-6,-5,-7,-8,-33,-33,-19,-3,-4,-9,-10,-16,-18,-17,-32,-11,-12,-22,-21,-23,-20,]),'SI':([5,6,7,8,9,10,12,13,16,20,21,22,23,24,25,26,33,36,37,46,49,56,59,],[17,17,-6,-5,-7,-8,17,17,-19,-3,-4,-9,-10,-16,-18,-17,-32,-11,-12,-22,-21,-23,-20,]),'HASTA':([5,6,7,8,9,10,12,13,16,20,21,22,23,24,25,26,33,36,37,46,49,56,59,],[18,18,-6,-5,-7,-8,18,18,-19,-3,-4,-9,-10,-16,-18,-17,-32,-11,-12,-22,-21,-23,-20,]),'MIENTRAS':([5,6,7,8,9,10,12,13,16,20,21,22,23,24,25,26,33,36,37,46,49,56,59,],[19,19,-6,-5,-7,-8,19,19,-19,-3,-4,-9,-10,-16,-18,-17,-32,-11,-12,-22,-21,-23,-20,]),'ID':([11,14,15,27,28,29,30,39,40,41,42,43,44,52,53,],[23,-14,-15,33,33,33,33,33,-28,-29,-30,-31,33,33,33,]),'LCORCHETE':([17,18,19,],[27,28,29,]),'SINO':([20,46,],[-3,50,]),'IGUAL':([23,],[30,]),'NUMERO':([30,],[36,]),'RCORCHETE':([31,33,35,47,48,51,54,57,58,],[38,-32,45,-33,55,-24,-27,-25,-26,]),'MENOR':([32,33,],[40,-32,]),'MENORQUE':([32,33,],[41,-32,]),'MAYOR':([32,33,],[42,-32,]),'MAYORQUE':([32,33,],[43,-32,]),'SEPARADOR':([33,34,],[-32,44,]),'Y':([33,47,],[-32,52,]),'O':([33,47,],[-32,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'empty':([0,5,6,12,13,47,],[3,8,22,25,25,54,]),'cuerpo_fun':([2,38,45,50,55,],[4,46,49,56,59,]),'sentencias_lista':([5,],[6,]),'sentencias':([5,6,],[7,21,]),'var_declaration':([5,6,],[9,9,]),'fun_declaraciones':([5,6,12,13,],[10,10,24,26,]),'type_specifier':([5,6,],[11,11,]),'fun_iteracion':([5,6,12,13,],[12,12,12,12,]),'fun_condicion':([5,6,12,13,],[13,13,13,13,]),'iteration_stmt':([5,6,12,13,],[16,16,16,16,]),'expression':([27,29,52,53,],[31,35,57,58,]),'var':([27,28,29,30,39,44,52,53,],[32,34,32,37,47,48,32,32,]),'operadores':([32,],[39,]),'otroex':([47,],[51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> INICIO cuerpo_fun','inicio',2,'p_inicio','c_parser.py',13),
  ('inicio -> empty','inicio',1,'p_inicio','c_parser.py',14),
  ('cuerpo_fun -> DELIMITADOR sentencias_lista DELIMITADOR','cuerpo_fun',3,'p_cuerpo_fun','c_parser.py',17),
  ('sentencias_lista -> sentencias_lista sentencias','sentencias_lista',2,'p_sentencias_lista','c_parser.py',20),
  ('sentencias_lista -> empty','sentencias_lista',1,'p_sentencias_lista','c_parser.py',21),
  ('sentencias_lista -> sentencias','sentencias_lista',1,'p_sentencias_lista_2','c_parser.py',26),
  ('sentencias -> var_declaration','sentencias',1,'p_sentencias','c_parser.py',31),
  ('sentencias -> fun_declaraciones','sentencias',1,'p_sentencias','c_parser.py',32),
  ('sentencias -> empty','sentencias',1,'p_sentencias','c_parser.py',33),
  ('var_declaration -> type_specifier ID','var_declaration',2,'p_var_declaration_1','c_parser.py',38),
  ('var_declaration -> type_specifier ID IGUAL NUMERO','var_declaration',4,'p_var_declaration_1','c_parser.py',39),
  ('var_declaration -> type_specifier ID IGUAL var','var_declaration',4,'p_var_declaration_1','c_parser.py',40),
  ('var_declaration -> empty','var_declaration',1,'p_var_declaracion_1','c_parser.py',44),
  ('type_specifier -> ENTERO','type_specifier',1,'p_type_specifier_1','c_parser.py',48),
  ('type_specifier -> STRING','type_specifier',1,'p_type_specifier_','c_parser.py',53),
  ('fun_declaraciones -> fun_iteracion fun_declaraciones','fun_declaraciones',2,'p_fun_declaraciones','c_parser.py',58),
  ('fun_declaraciones -> fun_condicion fun_declaraciones','fun_declaraciones',2,'p_fun_declaraciones','c_parser.py',59),
  ('fun_declaraciones -> empty','fun_declaraciones',1,'p_fun_declaraciones','c_parser.py',60),
  ('fun_iteracion -> iteration_stmt','fun_iteracion',1,'p_fun_iteracion','c_parser.py',64),
  ('iteration_stmt -> HASTA LCORCHETE var SEPARADOR var RCORCHETE cuerpo_fun','iteration_stmt',7,'p_iteration_stmt1','c_parser.py',70),
  ('iteration_stmt -> MIENTRAS LCORCHETE expression RCORCHETE cuerpo_fun','iteration_stmt',5,'p_iteration_stmt_2','c_parser.py',75),
  ('fun_condicion -> SI LCORCHETE expression RCORCHETE cuerpo_fun','fun_condicion',5,'p_fun_condicion_1','c_parser.py',79),
  ('fun_condicion -> SI LCORCHETE expression RCORCHETE cuerpo_fun SINO cuerpo_fun','fun_condicion',7,'p_fun_condicion_2','c_parser.py',82),
  ('expression -> var operadores var otroex','expression',4,'p_expression','c_parser.py',87),
  ('otroex -> Y expression','otroex',2,'p_otroex','c_parser.py',90),
  ('otroex -> O expression','otroex',2,'p_otroex','c_parser.py',91),
  ('otroex -> empty','otroex',1,'p_otroex','c_parser.py',92),
  ('operadores -> MENOR','operadores',1,'p_operadores','c_parser.py',96),
  ('operadores -> MENORQUE','operadores',1,'p_operadores','c_parser.py',97),
  ('operadores -> MAYOR','operadores',1,'p_operadores','c_parser.py',98),
  ('operadores -> MAYORQUE','operadores',1,'p_operadores','c_parser.py',99),
  ('var -> ID','var',1,'p_var','c_parser.py',109),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',116),
]
